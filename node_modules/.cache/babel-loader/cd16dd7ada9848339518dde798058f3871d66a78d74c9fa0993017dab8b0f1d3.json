{"ast":null,"code":"var _jsxFileName = \"/Users/wonseok/Desktop/react/SubHelper/src/routes/Mypage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Table, TableHead, TableRow, TableCell, TableBody } from '../components/Components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Mypage = () => {\n  _s();\n  const [subtitles, setSubtitles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // 자막 목록을 가져오는 함수\n    const fetchSubtitles = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/subtitles');\n        setSubtitles(response.data);\n      } catch (error) {\n        console.error('자막 목록을 가져오는 중 오류 발생:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSubtitles();\n  }, []);\n  const handleEditClick = id => {\n    alert(`자막 편집 ID: ${id}`); // 해당 프로젝트의 ID를 알림으로 표시\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"\\uB0B4 \\uC790\\uB9C9 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      className: \"table-auto w-full bg-white shadow-md rounded-lg border\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\uC790\\uB9C9 \\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\uD3B8\\uC9D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: subtitles.map(subtitle => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: subtitle.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: subtitle.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"solid\",\n              onClick: () => handleEditClick(subtitle.id) // 자막 편집 버튼 클릭 시 ID를 알림으로 표시\n              ,\n              children: \"\\uC790\\uB9C9 \\uD3B8\\uC9D1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, subtitle.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Mypage, \"/5CWJLC0adQJPhiknHzcBt8xzB4=\");\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","Mypage","_s","subtitles","setSubtitles","isLoading","setIsLoading","fetchSubtitles","response","get","data","error","console","handleEditClick","id","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subtitle","title","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/wonseok/Desktop/react/SubHelper/src/routes/Mypage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Table, TableHead, TableRow, TableCell, TableBody } from '../components/Components';\n\nexport const Mypage = () => {\n  const [subtitles, setSubtitles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // 자막 목록을 가져오는 함수\n    const fetchSubtitles = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/subtitles');\n        setSubtitles(response.data);\n      } catch (error) {\n        console.error('자막 목록을 가져오는 중 오류 발생:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSubtitles();\n  }, []);\n\n  const handleEditClick = (id) => {\n    alert(`자막 편집 ID: ${id}`); // 해당 프로젝트의 ID를 알림으로 표시\n  };\n\n  return (\n    <div className=\"w-full bg-white p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">내 자막 목록</h1>\n\n      {isLoading ? (\n        <p>로딩 중...</p>\n      ) : (\n        <Table className=\"table-auto w-full bg-white shadow-md rounded-lg border\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>자막 제목</TableCell>\n              <TableCell>편집</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {subtitles.map((subtitle) => (\n              <TableRow key={subtitle.id}>\n                <TableCell>{subtitle.id}</TableCell>\n                <TableCell>{subtitle.title}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"solid\"\n                    onClick={() => handleEditClick(subtitle.id)} // 자막 편집 버튼 클릭 시 ID를 알림으로 표시\n                  >\n                    자막 편집\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default Mypage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}