{"ast":null,"code":"var _jsxFileName = \"/Users/kimbeomseo/project/front_two/src/routes/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPhone, setUserPhone] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get('/api/user'); // 사용자 정보 요청\n        const userData = response.data.reduce((acc, curr) => {\n          return {\n            ...acc,\n            ...curr\n          };\n        }, {});\n        setUserName(userData.name || '');\n        setUserId(userData.user_id || '');\n        setUserEmail(userData.email || '');\n        setUserPhone(userData.phone_number || '');\n      } catch (error) {\n        console.error('사용자 정보를 가져오는 중 오류 발생:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const updatedUser = {\n        name: userName,\n        user_id: userId,\n        email: userEmail,\n        phone_number: userPhone\n      };\n      const response = await axios.put('/api/user/update', updatedUser);\n      console.log('사용자 정보 업데이트:', response.data);\n    } catch (error) {\n      console.error('사용자 정보를 업데이트하는 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdate,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uB984:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName || '' // userName이 undefined인 경우 빈 문자열 사용\n        ,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId || '' // userId가 undefined인 경우 빈 문자열 사용\n        ,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userEmail || '' // userEmail이 undefined인 경우 빈 문자열 사용\n        ,\n        onChange: e => setUserEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC804\\uD654\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userPhone || '' // userPhone이 undefined인 경우 빈 문자열 사용\n        ,\n        onChange: e => setUserPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"cf09Z9bNNSYVHOdCp0fSe7nNS/8=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","User","_s","userName","setUserName","userId","setUserId","userEmail","setUserEmail","userPhone","setUserPhone","fetchUserData","response","get","userData","data","reduce","acc","curr","name","user_id","email","phone_number","error","console","handleUpdate","e","preventDefault","updatedUser","put","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kimbeomseo/project/front_two/src/routes/User.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst User = () => {\r\n    const [userName, setUserName] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPhone, setUserPhone] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get('/api/user'); // 사용자 정보 요청\r\n                const userData = response.data.reduce((acc, curr) => {\r\n                    return { ...acc, ...curr };\r\n                }, {});\r\n\r\n                setUserName(userData.name || '');\r\n                setUserId(userData.user_id || '');\r\n                setUserEmail(userData.email || '');\r\n                setUserPhone(userData.phone_number || '');\r\n            } catch (error) {\r\n                console.error('사용자 정보를 가져오는 중 오류 발생:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const updatedUser = {\r\n                name: userName,\r\n                user_id: userId,\r\n                email: userEmail,\r\n                phone_number: userPhone,\r\n            };\r\n\r\n            const response = await axios.put('/api/user/update', updatedUser);\r\n            console.log('사용자 정보 업데이트:', response.data);\r\n        } catch (error) {\r\n            console.error('사용자 정보를 업데이트하는 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleUpdate}>\r\n            <div>\r\n                <label>이름:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userName || ''} // userName이 undefined인 경우 빈 문자열 사용\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>ID:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userId || ''} // userId가 undefined인 경우 빈 문자열 사용\r\n                    onChange={(e) => setUserId(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>이메일:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userEmail || ''} // userEmail이 undefined인 경우 빈 문자열 사용\r\n                    onChange={(e) => setUserEmail(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>전화번호:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userPhone || ''} // userPhone이 undefined인 경우 빈 문자열 사용\r\n                    onChange={(e) => setUserPhone(e.target.value)}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">수정하기</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default User;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}